<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = [
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'events_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventsBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter_event' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventsBundle\\Controller\\EventsController::ajoutEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajouterEvent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficher_event' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventsBundle\\Controller\\EventsController::afficherEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/afficherEvent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer_event' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventsBundle\\Controller\\EventsController::supprimerEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/supprimerEvent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifier_event' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventsBundle\\Controller\\EventsController::modifierEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/modifierEvent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter_category' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventsBundle\\Controller\\CategoryController::ajouterCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajouterCategory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficher_category' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventsBundle\\Controller\\CategoryController::afficherCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/afficherCategory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer_category' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventsBundle\\Controller\\CategoryController::supprimerCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/supprimerCategory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter_participation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventsBundle:Pass:ajouterParticipations',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajouterParticipation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficher_participation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventsBundle:Pass:afficherParticipations',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/afficherParticipation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer_participation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EventsBundle:Pass:supprimerParticipations',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/supprimerParticipation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'testpage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::testAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/test',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_ajout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addReclamation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_affiche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::afficherAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/showReclamation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteReclamation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/updateReclamation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gerer_enfant_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GererEnfantBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajoutEnfant' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GererEnfantBundle\\Controller\\EnfantController::ajoutEnfantAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajoutEnfant',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficheEnfant' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GererEnfantBundle\\Controller\\EnfantController::afficheEnfantAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/afficheEnfant',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateEnfant' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GererEnfantBundle\\Controller\\EnfantController::updateEnfantAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/updateEnfant',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteEnfant' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GererEnfantBundle\\Controller\\EnfantController::deleteEnfantAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteEnfant',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajoutNote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GererEnfantBundle\\Controller\\NoteController::ajoutNoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajoutNote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficheNote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GererEnfantBundle\\Controller\\NoteController::afficheNoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/afficheNote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateNote' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GererEnfantBundle\\Controller\\NoteController::updateNoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/updateNote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteNote' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GererEnfantBundle\\Controller\\NoteController::deleteNoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteNote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    ];
        }
    }

    public function generate($name, $parameters = [], $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
